name: Deploy to EC2

on:
  push:
    branches:
      - main # or your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}

          script: |
            echo "🚀 Starting deployment..."

            # Navigate to project directory
            cd /home/ubuntu/translation-worker-api || {
              echo "❌ Project directory not found!"
              exit 1
            }

            # Show current status
            echo "📊 Current git status:"
            git status
            git log --oneline -3

            # Force clean any local changes and pull latest
            echo "🔄 Cleaning and pulling latest code..."
            git fetch origin
            git reset --hard origin/main
            git pull origin main

            # Show what changed
            echo "📝 Latest changes:"
            git log --oneline -3

            # Stop services gracefully
            echo "🛑 Stopping services..."
            sudo docker-compose down --remove-orphans

            # Stop services that might be using port 80
            echo "🔍 Checking and freeing port 80..."
            sudo systemctl stop nginx || echo "Nginx not running"
            sudo systemctl stop apache2 || echo "Apache not running"

            # Kill any process using port 80
            sudo fuser -k 80/tcp || echo "No process found on port 80"

            # Wait for ports to be released
            echo "⏳ Waiting for port 80 to be freed..."
            sleep 5

            # Rebuild and start services (faster deployment)
            echo "🔨 Building and starting services..."
            sudo docker-compose up -d --build --force-recreate

            # Wait for API to be ready
            echo "⏳ Waiting for API to start..."
            sleep 15

            # Restart Nginx to proxy to the FastAPI container
            echo "🔄 Starting Nginx reverse proxy..."
            sudo systemctl start nginx || echo "Nginx start skipped"
            sudo systemctl reload nginx || echo "Nginx reload skipped"

            # Quick verification
            echo "✅ Deployment completed, checking status..."
            sudo docker-compose ps

            echo "🎉 Deployment completed!"
